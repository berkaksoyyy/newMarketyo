/**
 * Marketyo Mobile Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.marketyo.platform.model.address

import com.google.gson.Gson
import com.google.gson.annotations.SerializedName
import com.marketyo.platform.model.jet.JetAddress

class Address(
    @SerializedName(value = "id_address", alternate = ["id"])
    var idAddress: String? = null,
    @SerializedName("id_country")
    var idCountry: Long? = null,
    @SerializedName("id_state")
    var idState: Long? = null,
    @SerializedName("id_customer")
    var idCustomer: Long? = null,
    @SerializedName("alias")
    var alias: String? = null,
    @SerializedName(value = "company", alternate = ["description"])
    var company: String? = null,
    @SerializedName(value = "lastname", alternate = ["lastName"])
    var lastname: String? = null,
    @SerializedName(value = "firstname", alternate = ["firstName"])
    var firstname: String? = null,
    @SerializedName(value = "address1")
    var address1: String? = null,
    @SerializedName("address2")
    var address2: String? = null,
    @SerializedName("postcode")
    var postcode: String? = null,
    @SerializedName("city")
    var city: String? = null,
    @SerializedName(value = "other", alternate = ["fullAddress"])
    var other: String? = null,
    @SerializedName("phone")
    var phone: String? = null,
    @SerializedName("phone_mobile")
    var phoneMobile: String? = null,
    @SerializedName("vat_number")
    var vatNumber: String? = null,
    @SerializedName("dni")
    var dni: String? = null,
    @SerializedName("date_add")
    var dateAdd: String? = null,
    @SerializedName("date_upd")
    var dateUpd: String? = null,
    @SerializedName("active")
    var active: String? = null,
    @SerializedName("ilce")
    var ilce: String? = null,
    @SerializedName("mahalle")
    var mahalle: String? = null,
    @SerializedName("country")
    var country: String? = null,
// JET

    @SerializedName("latitude")
    var latitude: Double? = null,
    @SerializedName("longitude")
    var longitude: Double? = null,

    @SerializedName("building")
    var building: String? = null,
    @SerializedName("apartment")
    var apartment: String? = null,
    @SerializedName("floor")
    var floor: String? = null,
    @SerializedName("district_id")
    var districtId: String? = null,
    @SerializedName("avenue_id")
    var avenueId: String? = null
) {

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null || javaClass != other.javaClass) {
            return false
        }
        val address = other as Address?
        return (if (this.idAddress == null) address!!.idAddress == null else this.idAddress == address!!.idAddress) &&
                (if (this.idCountry == null) address.idCountry == null else this.idCountry == address.idCountry) &&
                (if (this.idState == null) address.idState == null else this.idState == address.idState) &&
                (if (this.idCustomer == null) address.idCustomer == null else this.idCustomer == address.idCustomer) &&
                (if (this.alias == null) address.alias == null else this.alias == address.alias) &&
                (if (this.company == null) address.company == null else this.company == address.company) &&
                (if (this.lastname == null) address.lastname == null else this.lastname == address.lastname) &&
                (if (this.firstname == null) address.firstname == null else this.firstname == address.firstname) &&
                (if (this.address1 == null) address.address1 == null else this.address1 == address.address1) &&
                (if (this.address2 == null) address.address2 == null else this.address2 == address.address2) &&
                (if (this.postcode == null) address.postcode == null else this.postcode == address.postcode) &&
                (if (this.city == null) address.city == null else this.city == address.city) &&
                (if (this.other == null) address.other == null else this.other == address.other) &&
                (if (this.phone == null) address.phone == null else this.phone == address.phone) &&
                (if (this.phoneMobile == null) address.phoneMobile == null else this.phoneMobile == address.phoneMobile) &&
                (if (this.vatNumber == null) address.vatNumber == null else this.vatNumber == address.vatNumber) &&
                (if (this.dni == null) address.dni == null else this.dni == address.dni) &&
                (if (this.dateAdd == null) address.dateAdd == null else this.dateAdd == address.dateAdd) &&
                (if (this.dateUpd == null) address.dateUpd == null else this.dateUpd == address.dateUpd) &&
                (if (this.active == null) address.active == null else this.active == address.active) &&
                (if (this.ilce == null) address.ilce == null else this.ilce == address.ilce) &&
                (if (this.mahalle == null) address.mahalle == null else this.mahalle == address.mahalle) &&
                if (this.country == null) address.country == null else this.country == address.country
    }

    override fun hashCode(): Int {
        var result = 17
        result = 31 * result + if (this.idAddress == null) 0 else this.idAddress!!.hashCode()
        result = 31 * result + if (this.idCountry == null) 0 else this.idCountry!!.hashCode()
        result = 31 * result + if (this.idState == null) 0 else this.idState!!.hashCode()
        result = 31 * result + if (this.idCustomer == null) 0 else this.idCustomer!!.hashCode()
        result = 31 * result + if (this.alias == null) 0 else this.alias!!.hashCode()
        result = 31 * result + if (this.company == null) 0 else this.company!!.hashCode()
        result = 31 * result + if (this.lastname == null) 0 else this.lastname!!.hashCode()
        result = 31 * result + if (this.firstname == null) 0 else this.firstname!!.hashCode()
        result = 31 * result + if (this.address1 == null) 0 else this.address1!!.hashCode()
        result = 31 * result + if (this.address2 == null) 0 else this.address2!!.hashCode()
        result = 31 * result + if (this.postcode == null) 0 else this.postcode!!.hashCode()
        result = 31 * result + if (this.city == null) 0 else this.city!!.hashCode()
        result = 31 * result + if (this.other == null) 0 else this.other!!.hashCode()
        result = 31 * result + if (this.phone == null) 0 else this.phone!!.hashCode()
        result = 31 * result + if (this.phoneMobile == null) 0 else this.phoneMobile!!.hashCode()
        result = 31 * result + if (this.vatNumber == null) 0 else this.vatNumber!!.hashCode()
        result = 31 * result + if (this.dni == null) 0 else this.dni!!.hashCode()
        result = 31 * result + if (this.dateAdd == null) 0 else this.dateAdd!!.hashCode()
        result = 31 * result + if (this.dateUpd == null) 0 else this.dateUpd!!.hashCode()
        result = 31 * result + if (this.active == null) 0 else this.active!!.hashCode()
        result = 31 * result + if (this.ilce == null) 0 else this.ilce!!.hashCode()
        result = 31 * result + if (this.mahalle == null) 0 else this.mahalle!!.hashCode()
        result = 31 * result + if (this.country == null) 0 else this.country!!.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class Address {\n")

        sb.append("  idAddress: ").append(idAddress).append("\n")
        sb.append("  idCountry: ").append(idCountry).append("\n")
        sb.append("  idState: ").append(idState).append("\n")
        sb.append("  idCustomer: ").append(idCustomer).append("\n")
        sb.append("  alias: ").append(alias).append("\n")
        sb.append("  company: ").append(company).append("\n")
        sb.append("  lastname: ").append(lastname).append("\n")
        sb.append("  firstname: ").append(firstname).append("\n")
        sb.append("  address1: ").append(address1).append("\n")
        sb.append("  address2: ").append(address2).append("\n")
        sb.append("  postcode: ").append(postcode).append("\n")
        sb.append("  city: ").append(city).append("\n")
        sb.append("  other: ").append(other).append("\n")
        sb.append("  phone: ").append(phone).append("\n")
        sb.append("  phoneMobile: ").append(phoneMobile).append("\n")
        sb.append("  vatNumber: ").append(vatNumber).append("\n")
        sb.append("  dni: ").append(dni).append("\n")
        sb.append("  dateAdd: ").append(dateAdd).append("\n")
        sb.append("  dateUpd: ").append(dateUpd).append("\n")
        sb.append("  active: ").append(active).append("\n")
        sb.append("  ilce: ").append(ilce).append("\n")
        sb.append("  mahalle: ").append(mahalle).append("\n")
        sb.append("  country: ").append(country).append("\n")
        sb.append("}\n")
        return sb.toString()
    }

    //    public LatLng getPosition() {
    //        return new LatLng(
    //                latitude == null ? 0.0 : latitude,
    //                longitude == null ? 0.0 : longitude
    //        );
    //    }
    //
    //    public void setPosition(@NonNull LatLng position) {
    //        latitude = position.latitude;
    //        longitude = position.longitude;
    //    }

    fun toJson(): String {
        val gson = Gson()
        return gson.toJson(this)
    }

    fun copy(): Address {
        return fromJson(this.toJson())
    }

    fun toJetAddress(): JetAddress {
        return JetAddress(
            idAddress,
            alias,
            firstname,
            lastname,
            phone,
            latitude,
            longitude,
            other,
            company,
            building,
            floor,
            apartment,
            postcode,
            address1,
            country,
            city,
            ilce,
            mahalle
        )
    }

    companion object {

        fun fromJson(json: String): Address {
            val gson = Gson()
            return gson.fromJson(json, Address::class.java)
        }

        fun copy(address: Address?): Address {
            return if (address == null) Address() else fromJson(address.toJson())
        }
    }
}
